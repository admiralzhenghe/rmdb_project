{"ast":null,"code":"var _s = $RefreshSig$();\n\n// API\nimport API from \"../API\"; // Hook\n\nimport { useState, useEffect } from \"react\";\nexport const usePersonFetch = personId => {\n  _s();\n\n  const [state, setState] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        console.log(\"person try\");\n        setLoading(true);\n        console.log(\"set load personfetch\");\n        setError(false);\n        const person = await API.fetchPerson(personId);\n        setState({ ...person\n        });\n        console.log(\"try done\");\n      } catch (error) {\n        setError(true);\n      }\n\n      setLoading(false);\n      console.log(\"loading false person\");\n    };\n\n    fetchData();\n  }, [personId]);\n  console.log(state, loading, \"person fetch return\");\n  return {\n    state,\n    loading,\n    error\n  };\n};\n\n_s(usePersonFetch, \"H9fMDtHieNoIS0cJiyLVriXyWm0=\");","map":{"version":3,"sources":["/Users/pgmp/Desktop/rmdb/src/hooks/usePersonFetch.js"],"names":["API","useState","useEffect","usePersonFetch","personId","state","setState","loading","setLoading","error","setError","fetchData","console","log","person","fetchPerson"],"mappings":";;AAAA;AACA,OAAOA,GAAP,MAAgB,QAAhB,C,CACA;;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,OAAO,MAAMC,cAAc,GAAIC,QAAD,IAAc;AAAA;;AAC1C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,KAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,SAAS,GAAG,YAAY;AAC5B,UAAI;AACFC,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAL,QAAAA,UAAU,CAAC,IAAD,CAAV;AACAI,QAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACAH,QAAAA,QAAQ,CAAC,KAAD,CAAR;AAEA,cAAMI,MAAM,GAAG,MAAMd,GAAG,CAACe,WAAJ,CAAgBX,QAAhB,CAArB;AACAE,QAAAA,QAAQ,CAAC,EAAE,GAAGQ;AAAL,SAAD,CAAR;AACAF,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACD,OATD,CASE,OAAOJ,KAAP,EAAc;AACdC,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACD;;AACDF,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACD,KAfD;;AAgBAF,IAAAA,SAAS;AACV,GAlBQ,EAkBN,CAACP,QAAD,CAlBM,CAAT;AAoBAQ,EAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ,EAAmBE,OAAnB,EAA4B,qBAA5B;AACA,SAAO;AAAEF,IAAAA,KAAF;AAASE,IAAAA,OAAT;AAAkBE,IAAAA;AAAlB,GAAP;AACD,CA3BM;;GAAMN,c","sourcesContent":["// API\nimport API from \"../API\";\n// Hook\nimport { useState, useEffect } from \"react\";\n\nexport const usePersonFetch = (personId) => {\n  const [state, setState] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        console.log(\"person try\");\n        setLoading(true);\n        console.log(\"set load personfetch\");\n        setError(false);\n\n        const person = await API.fetchPerson(personId);\n        setState({ ...person });\n        console.log(\"try done\");\n      } catch (error) {\n        setError(true);\n      }\n      setLoading(false);\n      console.log(\"loading false person\");\n    };\n    fetchData();\n  }, [personId]);\n\n  console.log(state, loading, \"person fetch return\");\n  return { state, loading, error };\n};\n"]},"metadata":{},"sourceType":"module"}