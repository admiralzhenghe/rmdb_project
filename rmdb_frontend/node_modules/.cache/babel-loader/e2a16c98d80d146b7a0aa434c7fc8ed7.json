{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport API from \"../API\";\nconst initialState = {\n  page: 0,\n  results: [],\n  total_pages: 0,\n  total_results: 0\n};\nexport const useHomeFetch = () => {\n  _s();\n\n  const [state, setState] = useState(initialState);\n  const [error, setError] = useState(false);\n  const [isLoadMore, setIsLoadMore] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  const fetchMovies = async (search = \"\", page) => {\n    try {\n      setError(false);\n      setLoading(true);\n      const movies = await API.fetchMovies(search, page);\n      setState(prev => ({ ...movies,\n        result: movies.page > 1 ? [...prev.results, ...movies.results] : movies.results\n      }));\n    } catch {\n      setError(true);\n    }\n\n    setLoading(false);\n  };\n\n  const loadMore = () => {\n    console.log(\"here\", state);\n    fetchMovies(\"\", state.page + 1);\n  }; // Initial render\n\n\n  useEffect(() => {\n    console.log(\"Mounted\");\n    setState(initialState);\n    setLoading(true);\n    fetchMovies(`${searchTerm}`, 1);\n  }, [searchTerm]);\n  return {\n    state,\n    loading,\n    error,\n    searchTerm,\n    setSearchTerm,\n    loadMore\n  };\n};\n\n_s(useHomeFetch, \"vq77TUlX2kdK0KrdpkElTk9rt1c=\");","map":{"version":3,"sources":["/Users/pgmp/Desktop/rmdb/src/hooks/useHomeFetch.js"],"names":["React","useState","useEffect","API","initialState","page","results","total_pages","total_results","useHomeFetch","state","setState","error","setError","isLoadMore","setIsLoadMore","loading","setLoading","searchTerm","setSearchTerm","fetchMovies","search","movies","prev","result","loadMore","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,GAAP,MAAgB,QAAhB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,CADa;AAEnBC,EAAAA,OAAO,EAAE,EAFU;AAGnBC,EAAAA,WAAW,EAAE,CAHM;AAInBC,EAAAA,aAAa,EAAE;AAJI,CAArB;AAOA,OAAO,MAAMC,YAAY,GAAG,MAAM;AAAA;;AAChC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAACG,YAAD,CAAlC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACa,UAAD,EAAaC,aAAb,IAA8Bd,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACe,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACiB,UAAD,EAAaC,aAAb,IAA8BlB,QAAQ,CAAC,EAAD,CAA5C;;AAEA,QAAMmB,WAAW,GAAG,OAAOC,MAAM,GAAG,EAAhB,EAAoBhB,IAApB,KAA6B;AAC/C,QAAI;AACFQ,MAAAA,QAAQ,CAAC,KAAD,CAAR;AACAI,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,YAAMK,MAAM,GAAG,MAAMnB,GAAG,CAACiB,WAAJ,CAAgBC,MAAhB,EAAwBhB,IAAxB,CAArB;AACAM,MAAAA,QAAQ,CAAEY,IAAD,KAAW,EAClB,GAAGD,MADe;AAElBE,QAAAA,MAAM,EACJF,MAAM,CAACjB,IAAP,GAAc,CAAd,GACI,CAAC,GAAGkB,IAAI,CAACjB,OAAT,EAAkB,GAAGgB,MAAM,CAAChB,OAA5B,CADJ,GAEIgB,MAAM,CAAChB;AALK,OAAX,CAAD,CAAR;AAOD,KAXD,CAWE,MAAM;AACNO,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD;;AACDI,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAhBD;;AAkBA,QAAMQ,QAAQ,GAAG,MAAM;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBjB,KAApB;AACAU,IAAAA,WAAW,CAAC,EAAD,EAAKV,KAAK,CAACL,IAAN,GAAa,CAAlB,CAAX;AACD,GAHD,CAzBgC,CA8BhC;;;AACAH,EAAAA,SAAS,CAAC,MAAM;AACdwB,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAhB,IAAAA,QAAQ,CAACP,YAAD,CAAR;AACAa,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAG,IAAAA,WAAW,CAAE,GAAEF,UAAW,EAAf,EAAkB,CAAlB,CAAX;AACD,GALQ,EAKN,CAACA,UAAD,CALM,CAAT;AAOA,SAAO;AAAER,IAAAA,KAAF;AAASM,IAAAA,OAAT;AAAkBJ,IAAAA,KAAlB;AAAyBM,IAAAA,UAAzB;AAAqCC,IAAAA,aAArC;AAAoDM,IAAAA;AAApD,GAAP;AACD,CAvCM;;GAAMhB,Y","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport API from \"../API\";\n\nconst initialState = {\n  page: 0,\n  results: [],\n  total_pages: 0,\n  total_results: 0,\n};\n\nexport const useHomeFetch = () => {\n  const [state, setState] = useState(initialState);\n  const [error, setError] = useState(false);\n  const [isLoadMore, setIsLoadMore] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  const fetchMovies = async (search = \"\", page) => {\n    try {\n      setError(false);\n      setLoading(true);\n      const movies = await API.fetchMovies(search, page);\n      setState((prev) => ({\n        ...movies,\n        result:\n          movies.page > 1\n            ? [...prev.results, ...movies.results]\n            : movies.results,\n      }));\n    } catch {\n      setError(true);\n    }\n    setLoading(false);\n  };\n\n  const loadMore = () => {\n    console.log(\"here\", state);\n    fetchMovies(\"\", state.page + 1);\n  };\n\n  // Initial render\n  useEffect(() => {\n    console.log(\"Mounted\");\n    setState(initialState);\n    setLoading(true);\n    fetchMovies(`${searchTerm}`, 1);\n  }, [searchTerm]);\n\n  return { state, loading, error, searchTerm, setSearchTerm, loadMore };\n};\n"]},"metadata":{},"sourceType":"module"}