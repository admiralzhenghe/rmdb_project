{"ast":null,"code":"var _jsxFileName = \"/Users/pgmp/Desktop/rmdb/src/components/Credits/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\"; // Component\n\nimport CreditsGrid from \"../CreditsGrid\";\nimport { Wrapper } from \"./Credits.style\";\nimport { usePersonCreditsFetch } from \"../../hooks/usePersonCreditsFetch\";\nimport { useState } from \"react/cjs/react.development\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Credits = ({\n  personId\n}) => {\n  _s();\n\n  const {\n    state: credits,\n    error,\n    loading\n  } = usePersonCreditsFetch(personId);\n  const [showing, setShowing] = useState(\"director\");\n  let keys;\n\n  if (!loading && credits) {\n    keys = Object.keys(credits); // setShowing(keys);\n    // console.log(showing);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!loading && keys.map(key => /*#__PURE__*/_jsxDEV(\"select\", {\n      value: key\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 38\n    }, this)), /*#__PURE__*/_jsxDEV(Wrapper, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Credits, \"hg8iXHPc+pIYZbXAUL63Iz0DP9I=\", false, function () {\n  return [usePersonCreditsFetch];\n});\n\n_c = Credits;\nexport default Credits;\n\nvar _c;\n\n$RefreshReg$(_c, \"Credits\");","map":{"version":3,"sources":["/Users/pgmp/Desktop/rmdb/src/components/Credits/index.js"],"names":["React","CreditsGrid","Wrapper","usePersonCreditsFetch","useState","Credits","personId","state","credits","error","loading","showing","setShowing","keys","Object","map","key"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,qBAAT,QAAsC,mCAAtC;AACA,SAASC,QAAT,QAAyB,6BAAzB;;;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAChC,QAAM;AAAEC,IAAAA,KAAK,EAAEC,OAAT;AAAkBC,IAAAA,KAAlB;AAAyBC,IAAAA;AAAzB,MAAqCP,qBAAqB,CAACG,QAAD,CAAhE;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,UAAD,CAAtC;AACA,MAAIS,IAAJ;;AACA,MAAI,CAACH,OAAD,IAAYF,OAAhB,EAAyB;AACvBK,IAAAA,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYL,OAAZ,CAAP,CADuB,CAEvB;AACA;AACD;;AACD,sBACE;AAAA,eACG,CAACE,OAAD,IAAYG,IAAI,CAACE,GAAL,CAAUC,GAAD,iBAAS;AAAQ,MAAA,KAAK,EAAEA;AAAf;AAAA;AAAA;AAAA;AAAA,YAAlB,CADf,eAEE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAMD,CAfD;;GAAMX,O;UACuCF,qB;;;KADvCE,O;AAiBN,eAAeA,OAAf","sourcesContent":["import React from \"react\";\n// Component\nimport CreditsGrid from \"../CreditsGrid\";\nimport { Wrapper } from \"./Credits.style\";\nimport { usePersonCreditsFetch } from \"../../hooks/usePersonCreditsFetch\";\nimport { useState } from \"react/cjs/react.development\";\n\nconst Credits = ({ personId }) => {\n  const { state: credits, error, loading } = usePersonCreditsFetch(personId);\n  const [showing, setShowing] = useState(\"director\");\n  let keys;\n  if (!loading && credits) {\n    keys = Object.keys(credits);\n    // setShowing(keys);\n    // console.log(showing);\n  }\n  return (\n    <>\n      {!loading && keys.map((key) => <select value={key}></select>)}\n      <Wrapper>{/* <CreditsGrid showing={credits[showing[0]]} /> */}</Wrapper>\n    </>\n  );\n};\n\nexport default Credits;\n"]},"metadata":{},"sourceType":"module"}