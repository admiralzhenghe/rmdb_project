{"ast":null,"code":"var _jsxFileName = \"/Users/pgmp/Desktop/rmdb/src/components/Home.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useHomeFetch } from \"../hooks/useHomeFetch\";\nimport { POSTER_SIZE, BACKDROP_SIZE, IMAGE_BASE_URL } from \"../config\";\nimport NoImage from \"../images/no_image.jpg\";\nimport Grid from \"./Grid\";\nimport HeroImage from \"./HeroImage\";\nimport Spinner from \"./Spinner\";\nimport Thumb from \"./Thumb\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const {\n    state,\n    loading,\n    error\n  } = useHomeFetch(); // Set the most popular movie as the hero image\n\n  const [mostPopular] = state.results;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [mostPopular && /*#__PURE__*/_jsxDEV(HeroImage, {\n      image: `${IMAGE_BASE_URL}${BACKDROP_SIZE}${mostPopular.backdrop_path}`,\n      title: mostPopular.original_title,\n      text: mostPopular.overview\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      header: \"Popular Movies\",\n      children: state.results.map(movie => /*#__PURE__*/_jsxDEV(Thumb, {\n        image: movie.poster_path ? IMAGE_BASE_URL + POSTER_SIZE + movie.poster_path : NoImage,\n        clickable: true,\n        movieId: movie.id\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Home, \"1TBnA7+ADydb+UrVYyBSP6YDrVg=\", false, function () {\n  return [useHomeFetch];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/pgmp/Desktop/rmdb/src/components/Home.js"],"names":["React","useHomeFetch","POSTER_SIZE","BACKDROP_SIZE","IMAGE_BASE_URL","NoImage","Grid","HeroImage","Spinner","Thumb","Home","state","loading","error","mostPopular","results","backdrop_path","original_title","overview","map","movie","poster_path","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,uBAA7B;AACA,SAASC,WAAT,EAAsBC,aAAtB,EAAqCC,cAArC,QAA2D,WAA3D;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,OAAT;AAAkBC,IAAAA;AAAlB,MAA4BZ,YAAY,EAA9C,CADiB,CAEjB;;AACA,QAAM,CAACa,WAAD,IAAgBH,KAAK,CAACI,OAA5B;AACA,sBACE;AAAA,eACGD,WAAW,iBACV,QAAC,SAAD;AACE,MAAA,KAAK,EAAG,GAAEV,cAAe,GAAED,aAAc,GAAEW,WAAW,CAACE,aAAc,EADvE;AAEE,MAAA,KAAK,EAAEF,WAAW,CAACG,cAFrB;AAGE,MAAA,IAAI,EAAEH,WAAW,CAACI;AAHpB;AAAA;AAAA;AAAA;AAAA,YAFJ,eAQE,QAAC,IAAD;AAAM,MAAA,MAAM,EAAC,gBAAb;AAAA,gBACGP,KAAK,CAACI,OAAN,CAAcI,GAAd,CAAmBC,KAAD,iBACjB,QAAC,KAAD;AAEE,QAAA,KAAK,EACHA,KAAK,CAACC,WAAN,GACIjB,cAAc,GAAGF,WAAjB,GAA+BkB,KAAK,CAACC,WADzC,GAEIhB,OALR;AAOE,QAAA,SAAS,MAPX;AAQE,QAAA,OAAO,EAAEe,KAAK,CAACE;AARjB,SACOF,KAAK,CAACE,EADb;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YARF,eAsBE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAtBF;AAAA,kBADF;AA0BD,CA9BD;;GAAMZ,I;UAC8BT,Y;;;KAD9BS,I;AAgCN,eAAeA,IAAf","sourcesContent":["import React from \"react\";\nimport { useHomeFetch } from \"../hooks/useHomeFetch\";\nimport { POSTER_SIZE, BACKDROP_SIZE, IMAGE_BASE_URL } from \"../config\";\nimport NoImage from \"../images/no_image.jpg\";\nimport Grid from \"./Grid\";\nimport HeroImage from \"./HeroImage\";\nimport Spinner from \"./Spinner\";\nimport Thumb from \"./Thumb\";\n\nconst Home = () => {\n  const { state, loading, error } = useHomeFetch();\n  // Set the most popular movie as the hero image\n  const [mostPopular] = state.results;\n  return (\n    <>\n      {mostPopular && (\n        <HeroImage\n          image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${mostPopular.backdrop_path}`}\n          title={mostPopular.original_title}\n          text={mostPopular.overview}\n        />\n      )}\n      <Grid header=\"Popular Movies\">\n        {state.results.map((movie) => (\n          <Thumb\n            key={movie.id}\n            image={\n              movie.poster_path\n                ? IMAGE_BASE_URL + POSTER_SIZE + movie.poster_path\n                : NoImage\n            }\n            clickable\n            movieId={movie.id}\n          />\n        ))}\n      </Grid>\n      <Spinner />\n    </>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}