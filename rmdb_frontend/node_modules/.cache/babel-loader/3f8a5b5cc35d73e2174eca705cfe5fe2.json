{"ast":null,"code":"var _jsxFileName = \"/Users/pgmp/Desktop/rmdb/src/components/MovieInfo/index.js\";\nimport React from \"react\"; // Components\n\nimport Thumb from \"../Thumb\"; //Config\n\nimport { IMAGE_BASE_URL, POSTER_SIZE } from \"../../config\"; // Helper\n\nimport { calcTime, convertMoney } from \"../../helpers\"; // Image\n\nimport NoImage from \"../../images/no_image.jpg\"; // Router\n\nimport { Link } from \"react-router-dom\"; // Styles\n\nimport { Wrapper, Content, Text } from \"./MovieInfo.styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MovieInfo = ({\n  movie\n}) => /*#__PURE__*/_jsxDEV(Wrapper, {\n  backdrop: movie.backdrop_path,\n  children: /*#__PURE__*/_jsxDEV(Content, {\n    children: [/*#__PURE__*/_jsxDEV(Thumb, {\n      image: movie.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}` : NoImage,\n      clickable: false,\n      alt: \"movie-thumb\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      rating: movie.vote_average,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [movie.title, \" (\", movie.release_date.slice(0, 4), \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [movie.release_date, \" \\xB7\", \" \", movie.genres.map(genre => genre.name).join(\", \"), \" \\xB7\", \" \", calcTime(movie.runtime)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rating-directors\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"title\",\n            children: \"User Rating\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rating\",\n            children: movie.vote_average\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"director\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"title\",\n            children: [\"Director\", movie.directors.length > 1 ? \"s\" : \"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), movie.directors.map(director => /*#__PURE__*/_jsxDEV(Link, {\n            to: `/person/${director.id}`,\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: director.name\n            }, director.credit_id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 17\n            }, this)\n          }, director.credit_id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tagline\",\n        children: movie.tagline.toUpperCase()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: \"Overview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: movie.overview\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: \"Status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: movie.status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: \"Budget\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: convertMoney(movie.budget)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: \"Revenue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: convertMoney(movie.revenue)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 16,\n  columnNumber: 3\n}, this);\n\n_c = MovieInfo;\nexport default MovieInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieInfo\");","map":{"version":3,"sources":["/Users/pgmp/Desktop/rmdb/src/components/MovieInfo/index.js"],"names":["React","Thumb","IMAGE_BASE_URL","POSTER_SIZE","calcTime","convertMoney","NoImage","Link","Wrapper","Content","Text","MovieInfo","movie","backdrop_path","poster_path","vote_average","title","release_date","slice","genres","map","genre","name","join","runtime","directors","length","director","id","credit_id","tagline","toUpperCase","overview","status","budget","revenue"],"mappings":"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","sourcesContent":["import React from \"react\";\n// Components\nimport Thumb from \"../Thumb\";\n//Config\nimport { IMAGE_BASE_URL, POSTER_SIZE } from \"../../config\";\n// Helper\nimport { calcTime, convertMoney } from \"../../helpers\";\n// Image\nimport NoImage from \"../../images/no_image.jpg\";\n// Router\nimport { Link } from \"react-router-dom\";\n// Styles\nimport { Wrapper, Content, Text } from \"./MovieInfo.styles\";\n\nconst MovieInfo = ({ movie }) => (\n  <Wrapper backdrop={movie.backdrop_path}>\n    <Content>\n      <Thumb\n        image={\n          movie.poster_path\n            ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\n            : NoImage\n        }\n        clickable={false}\n        alt=\"movie-thumb\"\n      />\n      <Text rating={movie.vote_average}>\n        <h1>\n          {movie.title} ({movie.release_date.slice(0, 4)})\n        </h1>\n        <p>\n          {movie.release_date} ·{\" \"}\n          {movie.genres.map((genre) => genre.name).join(\", \")} ·{\" \"}\n          {calcTime(movie.runtime)}\n        </p>\n        <div className=\"rating-directors\">\n          <div>\n            <div className=\"title\">User Rating</div>\n            <div className=\"rating\">{movie.vote_average}</div>\n          </div>\n          <div className=\"director\">\n            <div className=\"title\">\n              Director{movie.directors.length > 1 ? \"s\" : \"\"}\n            </div>\n            {movie.directors.map((director) => (\n              <Link key={director.credit_id} to={`/person/${director.id}`}>\n                <p key={director.credit_id}>{director.name}</p>\n              </Link>\n            ))}\n          </div>\n        </div>\n        <div className=\"tagline\">{movie.tagline.toUpperCase()}</div>\n        <div className=\"title\">Overview</div>\n        <p>{movie.overview}</p>\n        <div className=\"title\">Status</div>\n        <p>{movie.status}</p>\n        <div className=\"title\">Budget</div>\n        <p>{convertMoney(movie.budget)}</p>\n        <div className=\"title\">Revenue</div>\n        <p>{convertMoney(movie.revenue)}</p>\n      </Text>\n    </Content>\n  </Wrapper>\n);\n\nexport default MovieInfo;\n"]},"metadata":{},"sourceType":"module"}