{"ast":null,"code":"var _jsxFileName = \"/Users/pgmp/Desktop/rmdb/src/components/Home.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\"; // Component\n\nimport Button from \"./Button\";\nimport Grid from \"./Grid\";\nimport HeroImage from \"./HeroImage\";\nimport Search from \"./Search\";\nimport Spinner from \"./Spinner\";\nimport Thumb from \"./Thumb\"; // Config\n\nimport { POSTER_SIZE, BACKDROP_SIZE, IMAGE_BASE_URL } from \"../config\"; // Hook\n\nimport { useHomeFetch } from \"../hooks/useHomeFetch\"; // Image\n\nimport NoImage from \"../images/no_image.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const {\n    state,\n    loading,\n    error,\n    searchTerm,\n    setSearchTerm,\n    setIsLoadMore\n  } = useHomeFetch(); // Set the most popular movie as the hero image\n\n  const [mostPopular] = state.results;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!searchTerm && mostPopular && /*#__PURE__*/_jsxDEV(HeroImage, {\n      image: `${IMAGE_BASE_URL}${BACKDROP_SIZE}${mostPopular.backdrop_path}`,\n      title: mostPopular.original_title,\n      text: mostPopular.overview\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Search, {\n      setSearchTerm: setSearchTerm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      header: searchTerm ? \"Search Results\" : \"Popular Movies\",\n      children: state.results.map(movie => /*#__PURE__*/_jsxDEV(Thumb, {\n        image: movie.poster_path ? IMAGE_BASE_URL + POSTER_SIZE + movie.poster_path : NoImage,\n        clickable: true,\n        movieId: movie.id\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 19\n    }, this), !loading && state.page < state.total_pages && /*#__PURE__*/_jsxDEV(Button, {\n      text: \"Load More\",\n      callback: () => setIsLoadMore(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Home, \"PZCPk3IICS2nWj+eeMD2wLPT7oQ=\", false, function () {\n  return [useHomeFetch];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/pgmp/Desktop/rmdb/src/components/Home.js"],"names":["React","Button","Grid","HeroImage","Search","Spinner","Thumb","POSTER_SIZE","BACKDROP_SIZE","IMAGE_BASE_URL","useHomeFetch","NoImage","Home","state","loading","error","searchTerm","setSearchTerm","setIsLoadMore","mostPopular","results","backdrop_path","original_title","overview","map","movie","poster_path","id","page","total_pages"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,SAAlB,C,CACA;;AACA,SAASC,WAAT,EAAsBC,aAAtB,EAAqCC,cAArC,QAA2D,WAA3D,C,CACA;;AACA,SAASC,YAAT,QAA6B,uBAA7B,C,CACA;;AACA,OAAOC,OAAP,MAAoB,wBAApB;;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,OAAT;AAAkBC,IAAAA,KAAlB;AAAyBC,IAAAA,UAAzB;AAAqCC,IAAAA,aAArC;AAAoDC,IAAAA;AAApD,MACJR,YAAY,EADd,CADiB,CAGjB;;AACA,QAAM,CAACS,WAAD,IAAgBN,KAAK,CAACO,OAA5B;AACA,sBACE;AAAA,eACG,CAACJ,UAAD,IAAeG,WAAf,iBACC,QAAC,SAAD;AACE,MAAA,KAAK,EAAG,GAAEV,cAAe,GAAED,aAAc,GAAEW,WAAW,CAACE,aAAc,EADvE;AAEE,MAAA,KAAK,EAAEF,WAAW,CAACG,cAFrB;AAGE,MAAA,IAAI,EAAEH,WAAW,CAACI;AAHpB;AAAA;AAAA;AAAA;AAAA,YAFJ,eAQE,QAAC,MAAD;AAAQ,MAAA,aAAa,EAAEN;AAAvB;AAAA;AAAA;AAAA;AAAA,YARF,eASE,QAAC,IAAD;AAAM,MAAA,MAAM,EAAED,UAAU,GAAG,gBAAH,GAAsB,gBAA9C;AAAA,gBACGH,KAAK,CAACO,OAAN,CAAcI,GAAd,CAAmBC,KAAD,iBACjB,QAAC,KAAD;AAEE,QAAA,KAAK,EACHA,KAAK,CAACC,WAAN,GACIjB,cAAc,GAAGF,WAAjB,GAA+BkB,KAAK,CAACC,WADzC,GAEIf,OALR;AAOE,QAAA,SAAS,MAPX;AAQE,QAAA,OAAO,EAAEc,KAAK,CAACE;AARjB,SACOF,KAAK,CAACE,EADb;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YATF,EAuBGb,OAAO,iBAAI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAvBd,EAwBG,CAACA,OAAD,IAAYD,KAAK,CAACe,IAAN,GAAaf,KAAK,CAACgB,WAA/B,iBACC,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,WAAb;AAAyB,MAAA,QAAQ,EAAE,MAAMX,aAAa,CAAC,IAAD;AAAtD;AAAA;AAAA;AAAA;AAAA,YAzBJ;AAAA,kBADF;AA8BD,CAnCD;;GAAMN,I;UAEFF,Y;;;KAFEE,I;AAqCN,eAAeA,IAAf","sourcesContent":["import React from \"react\";\n// Component\nimport Button from \"./Button\";\nimport Grid from \"./Grid\";\nimport HeroImage from \"./HeroImage\";\nimport Search from \"./Search\";\nimport Spinner from \"./Spinner\";\nimport Thumb from \"./Thumb\";\n// Config\nimport { POSTER_SIZE, BACKDROP_SIZE, IMAGE_BASE_URL } from \"../config\";\n// Hook\nimport { useHomeFetch } from \"../hooks/useHomeFetch\";\n// Image\nimport NoImage from \"../images/no_image.jpg\";\n\nconst Home = () => {\n  const { state, loading, error, searchTerm, setSearchTerm, setIsLoadMore } =\n    useHomeFetch();\n  // Set the most popular movie as the hero image\n  const [mostPopular] = state.results;\n  return (\n    <>\n      {!searchTerm && mostPopular && (\n        <HeroImage\n          image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${mostPopular.backdrop_path}`}\n          title={mostPopular.original_title}\n          text={mostPopular.overview}\n        />\n      )}\n      <Search setSearchTerm={setSearchTerm} />\n      <Grid header={searchTerm ? \"Search Results\" : \"Popular Movies\"}>\n        {state.results.map((movie) => (\n          <Thumb\n            key={movie.id}\n            image={\n              movie.poster_path\n                ? IMAGE_BASE_URL + POSTER_SIZE + movie.poster_path\n                : NoImage\n            }\n            clickable\n            movieId={movie.id}\n          />\n        ))}\n      </Grid>\n      {loading && <Spinner />}\n      {!loading && state.page < state.total_pages && (\n        <Button text=\"Load More\" callback={() => setIsLoadMore(true)} />\n      )}\n    </>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}