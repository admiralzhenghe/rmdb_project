{"ast":null,"code":"var _jsxFileName = \"/Users/pgmp/Desktop/rmdb/src/components/Credits/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\"; // Component\n\nimport CreditsGrid from \"../CreditsGrid\";\nimport { Content, Wrapper } from \"./Credits.style\";\nimport { useState } from \"react/cjs/react.development\";\nimport Dropdown from \"../Dropdown\"; // import Spinner from \"../Spinner\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Credits = ({\n  person,\n  credits\n}) => {\n  _s();\n\n  let keys = Object.keys(credits); // Only show select options for previously held jobs\n\n  let jobs = keys.filter(key => credits[key].length > 0); // Sort jobs by the most number of credits\n\n  jobs = jobs.sort((a, b) => credits[b].length - credits[a].length);\n  const [showing, setShowing] = useState(jobs[0]);\n  console.log(\"here in credits\", showing);\n\n  const handleSelect = job => {\n    console.log(`set ${job}`);\n    console.log(showing, \"first\");\n    setShowing(job);\n    console.log(showing, \"second\");\n  };\n\n  useEffect(() => {// console.log(jobs, \"dropdown useeffect\");\n    // handleSelect(jobs[0]);\n    // handleSelect(\"yes\");\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: /*#__PURE__*/_jsxDEV(Content, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"job-type\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"FILMS\", \" \", showing === \"actor\" ? \"STARRING\" : showing === \"director\" ? \"DIRECTED BY\" : showing === \"producer\" ? \"PRODUCED BY\" : \"WRITTEN BY\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"name\",\n          children: person.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n        credits: credits,\n        jobs: jobs,\n        handleSelect: handleSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), showing && /*#__PURE__*/_jsxDEV(CreditsGrid, {\n        showing: credits[showing]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Credits, \"u0PxsG4N7pUDMsBOuvaYHYpvdv4=\");\n\n_c = Credits;\nexport default Credits;\n\nvar _c;\n\n$RefreshReg$(_c, \"Credits\");","map":{"version":3,"sources":["/Users/pgmp/Desktop/rmdb/src/components/Credits/index.js"],"names":["React","useEffect","CreditsGrid","Content","Wrapper","useState","Dropdown","Credits","person","credits","keys","Object","jobs","filter","key","length","sort","a","b","showing","setShowing","console","log","handleSelect","job","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,iBAAjC;AACA,SAASC,QAAT,QAAyB,6BAAzB;AACA,OAAOC,QAAP,MAAqB,aAArB,C,CACA;;;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAD,KAAyB;AAAA;;AACvC,MAAIC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYD,OAAZ,CAAX,CADuC,CAEvC;;AACA,MAAIG,IAAI,GAAGF,IAAI,CAACG,MAAL,CAAaC,GAAD,IAASL,OAAO,CAACK,GAAD,CAAP,CAAaC,MAAb,GAAsB,CAA3C,CAAX,CAHuC,CAIvC;;AACAH,EAAAA,IAAI,GAAGA,IAAI,CAACI,IAAL,CAAU,CAACC,CAAD,EAAIC,CAAJ,KAAUT,OAAO,CAACS,CAAD,CAAP,CAAWH,MAAX,GAAoBN,OAAO,CAACQ,CAAD,CAAP,CAAWF,MAAnD,CAAP;AAEA,QAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAACO,IAAI,CAAC,CAAD,CAAL,CAAtC;AACAS,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BH,OAA/B;;AAEA,QAAMI,YAAY,GAAIC,GAAD,IAAS;AAC5BH,IAAAA,OAAO,CAACC,GAAR,CAAa,OAAME,GAAI,EAAvB;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ,EAAqB,OAArB;AACAC,IAAAA,UAAU,CAACI,GAAD,CAAV;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ,EAAqB,QAArB;AACD,GALD;;AAOAlB,EAAAA,SAAS,CAAC,MAAM,CACd;AACA;AACA;AACD,GAJQ,EAIN,EAJM,CAAT;AAMA,sBACE,QAAC,OAAD;AAAA,2BACE,QAAC,OAAD;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,gCACE;AAAA,8BACQ,GADR,EAEGkB,OAAO,KAAK,OAAZ,GACG,UADH,GAEGA,OAAO,KAAK,UAAZ,GACA,aADA,GAEAA,OAAO,KAAK,UAAZ,GACA,aADA,GAEA,YARN;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAWE;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,oBAAuBX,MAAM,CAACiB;AAA9B;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAcE,QAAC,QAAD;AAAU,QAAA,OAAO,EAAEhB,OAAnB;AAA4B,QAAA,IAAI,EAAEG,IAAlC;AAAwC,QAAA,YAAY,EAAEW;AAAtD;AAAA;AAAA;AAAA;AAAA,cAdF,EAeGJ,OAAO,iBAAI,QAAC,WAAD;AAAa,QAAA,OAAO,EAAEV,OAAO,CAACU,OAAD;AAA7B;AAAA;AAAA;AAAA;AAAA,cAfd;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CA5CD;;GAAMZ,O;;KAAAA,O;AA8CN,eAAeA,OAAf","sourcesContent":["import React, { useEffect } from \"react\";\n// Component\nimport CreditsGrid from \"../CreditsGrid\";\nimport { Content, Wrapper } from \"./Credits.style\";\nimport { useState } from \"react/cjs/react.development\";\nimport Dropdown from \"../Dropdown\";\n// import Spinner from \"../Spinner\";\n\nconst Credits = ({ person, credits }) => {\n  let keys = Object.keys(credits);\n  // Only show select options for previously held jobs\n  let jobs = keys.filter((key) => credits[key].length > 0);\n  // Sort jobs by the most number of credits\n  jobs = jobs.sort((a, b) => credits[b].length - credits[a].length);\n\n  const [showing, setShowing] = useState(jobs[0]);\n  console.log(\"here in credits\", showing);\n\n  const handleSelect = (job) => {\n    console.log(`set ${job}`);\n    console.log(showing, \"first\");\n    setShowing(job);\n    console.log(showing, \"second\");\n  };\n\n  useEffect(() => {\n    // console.log(jobs, \"dropdown useeffect\");\n    // handleSelect(jobs[0]);\n    // handleSelect(\"yes\");\n  }, []);\n\n  return (\n    <Wrapper>\n      <Content>\n        <div className=\"job-type\">\n          <div>\n            FILMS{\" \"}\n            {showing === \"actor\"\n              ? \"STARRING\"\n              : showing === \"director\"\n              ? \"DIRECTED BY\"\n              : showing === \"producer\"\n              ? \"PRODUCED BY\"\n              : \"WRITTEN BY\"}\n          </div>\n          <div className=\"name\">{person.name}</div>\n        </div>\n        <Dropdown credits={credits} jobs={jobs} handleSelect={handleSelect} />\n        {showing && <CreditsGrid showing={credits[showing]} />}\n      </Content>\n    </Wrapper>\n  );\n};\n\nexport default Credits;\n"]},"metadata":{},"sourceType":"module"}