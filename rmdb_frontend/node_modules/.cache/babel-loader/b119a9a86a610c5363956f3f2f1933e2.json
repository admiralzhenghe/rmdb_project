{"ast":null,"code":"var _jsxFileName = \"/Users/pgmp/Desktop/rmdb/src/components/Credits/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\"; // Component\n\nimport CreditsGrid from \"../CreditsGrid\";\nimport { Wrapper } from \"./Credits.style\";\nimport { usePersonCreditsFetch } from \"../../hooks/usePersonCreditsFetch\";\nimport { useState } from \"react/cjs/react.development\";\nimport Dropdown from \"../Dropdown\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Credits = ({\n  personId\n}) => {\n  _s();\n\n  const {\n    state: credits,\n    error,\n    loading\n  } = usePersonCreditsFetch(personId);\n  const [showing, setShowing] = useState(\"\");\n  let jobs;\n\n  if (!loading && credits) {\n    console.log(credits, \"here\");\n    let keys = Object.keys(credits);\n    jobs = keys.filter(key => credits[key].length === 0);\n  }\n\n  console.log(jobs, \"hur\");\n\n  const handleSelect = job => {\n    setShowing(job);\n    console.log(showing);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: !loading && /*#__PURE__*/_jsxDEV(Dropdown, {\n        credits: credits,\n        jobs: jobs,\n        handleSelect: handleSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Credits, \"oz3YnWHXsaqRxZ4aSP0PsOS/PE8=\", false, function () {\n  return [usePersonCreditsFetch];\n});\n\n_c = Credits;\nexport default Credits;\n\nvar _c;\n\n$RefreshReg$(_c, \"Credits\");","map":{"version":3,"sources":["/Users/pgmp/Desktop/rmdb/src/components/Credits/index.js"],"names":["React","CreditsGrid","Wrapper","usePersonCreditsFetch","useState","Dropdown","Credits","personId","state","credits","error","loading","showing","setShowing","jobs","console","log","keys","Object","filter","key","length","handleSelect","job"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,qBAAT,QAAsC,mCAAtC;AACA,SAASC,QAAT,QAAyB,6BAAzB;AACA,OAAOC,QAAP,MAAqB,aAArB;;;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAChC,QAAM;AAAEC,IAAAA,KAAK,EAAEC,OAAT;AAAkBC,IAAAA,KAAlB;AAAyBC,IAAAA;AAAzB,MAAqCR,qBAAqB,CAACI,QAAD,CAAhE;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,EAAD,CAAtC;AACA,MAAIU,IAAJ;;AACA,MAAI,CAACH,OAAD,IAAYF,OAAhB,EAAyB;AACvBM,IAAAA,OAAO,CAACC,GAAR,CAAYP,OAAZ,EAAqB,MAArB;AACA,QAAIQ,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYR,OAAZ,CAAX;AACAK,IAAAA,IAAI,GAAGG,IAAI,CAACE,MAAL,CAAaC,GAAD,IAASX,OAAO,CAACW,GAAD,CAAP,CAAaC,MAAb,KAAwB,CAA7C,CAAP;AACD;;AACDN,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAAkB,KAAlB;;AACA,QAAMQ,YAAY,GAAIC,GAAD,IAAS;AAC5BV,IAAAA,UAAU,CAACU,GAAD,CAAV;AACAR,IAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AACD,GAHD;;AAIA,sBACE;AAAA,2BACE,QAAC,OAAD;AAAA,gBACG,CAACD,OAAD,iBACC,QAAC,QAAD;AACE,QAAA,OAAO,EAAEF,OADX;AAEE,QAAA,IAAI,EAAEK,IAFR;AAGE,QAAA,YAAY,EAAEQ;AAHhB;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAcD,CA5BD;;GAAMhB,O;UACuCH,qB;;;KADvCG,O;AA8BN,eAAeA,OAAf","sourcesContent":["import React from \"react\";\n// Component\nimport CreditsGrid from \"../CreditsGrid\";\nimport { Wrapper } from \"./Credits.style\";\nimport { usePersonCreditsFetch } from \"../../hooks/usePersonCreditsFetch\";\nimport { useState } from \"react/cjs/react.development\";\nimport Dropdown from \"../Dropdown\";\n\nconst Credits = ({ personId }) => {\n  const { state: credits, error, loading } = usePersonCreditsFetch(personId);\n  const [showing, setShowing] = useState(\"\");\n  let jobs;\n  if (!loading && credits) {\n    console.log(credits, \"here\");\n    let keys = Object.keys(credits);\n    jobs = keys.filter((key) => credits[key].length === 0);\n  }\n  console.log(jobs, \"hur\");\n  const handleSelect = (job) => {\n    setShowing(job);\n    console.log(showing);\n  };\n  return (\n    <>\n      <Wrapper>\n        {!loading && (\n          <Dropdown\n            credits={credits}\n            jobs={jobs}\n            handleSelect={handleSelect}\n          ></Dropdown>\n        )}\n        {/* <CreditsGrid showing={credits[showing[0]]} /> */}\n      </Wrapper>\n    </>\n  );\n};\n\nexport default Credits;\n"]},"metadata":{},"sourceType":"module"}